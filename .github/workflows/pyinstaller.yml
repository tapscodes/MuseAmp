name: Build executables with PyInstaller and upload to Releases

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PySide6 mutagen

      # --- Linux: Download RSgain and FFmpeg ---
      - name: Download RSgain and FFmpeg (Linux)
        if: runner.os == 'Linux'
        run: |
          wget https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-Linux.tar.xz
          tar xf rsgain-3.6-Linux.tar.xz
          cp rsgain-3.6-Linux/rsgain ./rsgain
          wget https://github.com/BtbN/FFmpeg-Builds/releases/download/autobuild-2025-06-13-13-43/ffmpeg-n7.1.1-22-g0f1fe3d153-linux64-gpl-7.1.tar.xz
          tar xf ffmpeg-n7.1.1-22-g0f1fe3d153-linux64-gpl-7.1.tar.xz
          cp ffmpeg-n7.1.1-22-g0f1fe3d153-linux64-gpl-7.1/bin/ffmpeg ./ffmpeg
          if [ ! -f rsgain ]; then
            echo "Error: rsgain not found!"
            exit 1
          fi
          if [ ! -f ffmpeg ]; then
            echo "Error: ffmpeg not found!"
            exit 1
          fi

      # --- Windows: Download RSgain and FFmpeg ---
      - name: Download RSgain and FFmpeg (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          curl -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-win64.zip
          powershell -Command "Expand-Archive -Path rsgain-3.6-win64.zip -DestinationPath rsgain-win64"
          for /R rsgain-win64 %%i in (rsgain.exe) do (
            if exist "%%i" (
              copy "%%i" rsgain.exe
            )
          )
          if not exist rsgain.exe (
            echo "Error: rsgain.exe not found!"
            exit 1
          )
          curl -LO https://github.com/BtbN/FFmpeg-Builds/releases/download/autobuild-2025-06-13-13-43/ffmpeg-n7.1.1-22-g0f1fe3d153-winarm64-gpl-7.1.zip
          powershell -Command "Expand-Archive -Path ffmpeg-n7.1.1-22-g0f1fe3d153-winarm64-gpl-7.1.zip -DestinationPath ffmpeg"
          for /R ffmpeg %%i in (ffmpeg.exe) do (
            if exist "%%i" (
              copy "%%i" ffmpeg.exe
            )
          )
          if not exist ffmpeg.exe (
            echo "Error: ffmpeg.exe not found!"
            exit 1
          )

      - name: Rename rsgain.exe to rsgain (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if exist rsgain.exe ren rsgain.exe rsgain

      # --- macOS: Download RSgain and FFmpeg ---
      - name: Download RSgain and FFmpeg (macOS)
        if: runner.os == 'macOS'
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "arm64" ]; then
            curl --fail -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-macOS-arm64.zip
            unzip rsgain-3.6-macOS-arm64.zip
            mv rsgain-3.6-macOS-arm64/rsgain ./rsgain
          else
            curl --fail -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-macOS-x86_64.zip
            unzip rsgain-3.6-macOS-x86_64.zip
            mv rsgain-3.6-macOS-x86_64/rsgain ./rsgain
          fi
          curl --fail -Lo ffmpeg.zip https://evermeet.cx/ffmpeg/getrelease/zip
          unzip ffmpeg.zip
          if [ ! -f rsgain ]; then
            echo "Error: rsgain not found!"
            exit 1
          fi
          if [ ! -f ffmpeg ]; then
            echo "Error: ffmpeg not found!"
            exit 1
          fi

      # --- Build with PyInstaller ---
      - name: Build with PyInstaller
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            pyinstaller --onefile --name MuseAmpLinux --add-binary "rsgain:." --add-binary "ffmpeg:." MuseAmp.pyw
          elif [ "${{ runner.os }}" = "macOS" ]; then
            pyinstaller --onefile --name MuseAmpMacOS --add-binary "rsgain:." --add-binary "ffmpeg:." MuseAmp.pyw
          elif [ "${{ runner.os }}" = "Windows" ]; then
            pyinstaller --onefile --name MuseAmpWindows --add-binary "rsgain;." --add-binary "ffmpeg;." MuseAmp.pyw
          fi

      # --- Upload artifact (Actions tab) ---
      - name: Upload artifact (Actions tab)
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: museamp-${{ runner.os }}
          path: |
            dist/MuseAmpLinux*
            dist/MuseAmpMacOS*
            dist/MuseAmpWindows.exe

      # --- Upload to GitHub Releases (all platforms) ---
      - name: Upload to GitHub Releases
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/MuseAmpLinux*
            dist/MuseAmpMacOS*
            dist/MuseAmpWindows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}