name: Build with PyInstaller

on:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # --- Download RSgain and FFmpeg (Linux) ---
      - name: Download RSgain and FFmpeg (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-Linux.tar.xz
          tar xf rsgain-3.6-Linux.tar.xz
          cp rsgain-3.6-Linux/rsgain ./rsgain
          wget https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-n7.1-latest-linux64-gpl-7.1.tar.xz
          tar xf ffmpeg-n7.1-latest-linux64-gpl-7.1.tar.xz
          cp ffmpeg-n7.1-latest-linux64-gpl-7.1/bin/ffmpeg ./ffmpeg
          if [ ! -f rsgain ]; then
            echo "Error: rsgain not found!"
            exit 1
          fi
          if [ ! -f ffmpeg ]; then
            echo "Error: ffmpeg not found!"
            exit 1
          fi

      # --- Download RSgain and FFmpeg (macOS) ---
      - name: Download RSgain and FFmpeg (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          ARCH=$(uname -m)
          if [ "$ARCH" = "arm64" ]; then
            curl --fail -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-macOS-arm64.zip
            unzip rsgain-3.6-macOS-arm64.zip
            mv rsgain-3.6-macOS-arm64/rsgain ./rsgain
          else
            curl --fail -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-macOS-x86_64.zip
            unzip rsgain-3.6-macOS-x86_64.zip
            mv rsgain-3.6-macOS-x86_64/rsgain ./rsgain
          fi
          curl --fail -Lo ffmpeg.zip https://evermeet.cx/ffmpeg/getrelease/zip
          unzip ffmpeg.zip
          if [ ! -f rsgain ]; then
            echo "Error: rsgain not found!"
            exit 1
          fi
          if [ ! -f ffmpeg ]; then
            echo "Error: ffmpeg not found!"
            exit 1
          fi

      # --- Download RSgain and FFmpeg (Windows) ---
      - name: Download RSgain and FFmpeg (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          curl -LO https://github.com/complexlogic/rsgain/releases/download/v3.6/rsgain-3.6-win64.zip
          powershell -Command "Expand-Archive -Path rsgain-3.6-win64.zip -DestinationPath rsgain-win64"
          for /R rsgain-win64 %%i in (rsgain.exe) do (
            if exist "%%i" (
              copy "%%i" rsgain.exe
            )
          )
          if not exist rsgain.exe (
            echo "Error: rsgain.exe not found!"
            exit 1
          )
          curl -LO https://github.com/BtbN/FFmpeg-Builds/releases/latest/download/ffmpeg-n7.1-latest-win64-gpl-7.1.zip
          powershell -Command "Expand-Archive -Path ffmpeg-n7.1-latest-win64-gpl-7.1.zip -DestinationPath ffmpeg"
          for /R ffmpeg %%i in (ffmpeg.exe) do (
            if exist "%%i" (
              copy "%%i" ffmpeg.exe
            )
          )
          if not exist ffmpeg.exe (
            echo "Error: ffmpeg.exe not found!"
            exit 1
          )

      - name: Rename rsgain.exe to rsgain (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          if exist rsgain.exe ren rsgain.exe rsgain

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PySide6 pyinstaller

      - name: build executable
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            pyinstaller --onefile --add-binary "rsgain:." --add-binary "ffmpeg:." --name PrefferentialFLAC-Linux PreferrentialFLAC.py
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            pyinstaller --onefile --add-binary "rsgain:." --add-binary "ffmpeg:." --name PrefferentialFLAC-MacOS PreferrentialFLAC.py
          else
            pyinstaller --onefile --add-binary "rsgain;." --add-binary "ffmpeg.exe;." --name PrefferentialFLAC-Windows PreferrentialFLAC.py
          fi

      - name: set artifact name
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "ARTIFACT=PrefferentialFLAC-Linux" >> $GITHUB_ENV
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            echo "ARTIFACT=PrefferentialFLAC-MacOS" >> $GITHUB_ENV
          else
            echo "ARTIFACT=PrefferentialFLAC-Windows" >> $GITHUB_ENV
          fi

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: dist/PrefferentialFLAC-*